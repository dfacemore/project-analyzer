version: '3.0'

networks:
  appl:
    driver: bridge

volumes:
  db-data:
    driver: local
  redis-data:
    driver: local
  kafka-data:
    driver: local
  zookeeper-data:
    driver: local

services:
  generator:
    image: 'dfacemore/project-generator:latest'
    networks:
      - appl
    depends_on:
      - kafka
    env_file:
      - .env-docker
    ports:
      - '8081:8081'

  analyzer:
    image: 'dfacemore/project-analyzer:latest'
    networks:
      - appl
    depends_on:
      - postgres
      - kafka
    env_file:
      - .env-docker
    ports:
      - '8082:8082'

  zookeeper:
    image: 'zookeeper:latest'
    networks:
      - appl
    environment:
      - ZOOKEEPER_CLIENT_PORT=${ZOOKEEPER_CLIENT_PORT}
      - ZOOKEEPER_TICK_TIME=${ZOOKEEPER_TICK_TIME}
    env_file:
      - .env-docker
    ports:
      - '2181:2181'
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data

  kafka:
    image: 'confluentinc/cp-kafka:latest'
    networks:
      - appl
    depends_on:
      - zookeeper
    environment:
      - KAFKA_BROKER_ID=${KAFKA_BROKER_ID}
      - KAFKA_ZOOKEEPER_CONNECT=${KAFKA_ZOOKEEPER_CONNECT}
      - KAFKA_ADVERTISED_LISTENERS=${KAFKA_ADVERTISED_LISTENERS}
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP}
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=${KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR}
    env_file:
      - .env-docker
    ports:
      - '9092:9092'
    volumes:
      - kafka-data:/var/lib/kafka/data

  postgres:
    image: 'postgres:15.1-alpine'
    networks:
      - appl
    env_file:
      - .env-docker
    ports:
      - '5437:5432'
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
    volumes:
      - db-data:/var/lib/postgresql/data